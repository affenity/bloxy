import { BaseAPI } from "./BaseAPI";
import { Client } from "../Client";
export declare type ThumbnailsGetAssetsThumbnailsOptions = {
    assetIds: number[];
    returnPolicy?: "PlaceHolder" | "AutoGenerated" | "ForceAutoGenerated";
    size?: "42x42" | "50x50" | "75x75" | "110x110" | "140x140" | "150x150" | "160x100" | "160x600" | "250x250" | "256x144" | "300x250" | "304x166" | "384x216" | "396x216" | "420x420" | "480x270" | "512x512" | "576x324" | "700x700" | "728x90" | "768x432";
    format?: "png" | "jpg";
    isCircular?: boolean;
};
export declare type ThumbnailsGetAssetsThumbnails = {
    data: {
        targetId: number;
        state: "Error" | string;
        imageUrl: string;
    }[];
};
export declare type ThumbnailsGetBadgesIconsOptions = {
    badgeIds: number[];
    size?: "150x150";
    format?: "png" | "jpg";
    isCircular?: boolean;
};
export declare type ThumbnailsGetBadgesIcons = ThumbnailsGetAssetsThumbnails;
export declare type ThumbnailsGetBundlesThumbnailsOptions = {
    bundleIds: number[];
    size?: "150x150" | "420x420";
    format?: "png" | "jpg";
    isCircular?: boolean;
};
export declare type ThumbnailsGetBundlesThumbnails = ThumbnailsGetAssetsThumbnails;
export declare type ThumbnailsGetDeveloperProductsIconsOptions = {
    developerProductIds: number[];
    size?: "150x150" | "420x420";
    format?: "png" | "jpg";
    isCircular?: boolean;
};
export declare type ThumbnailsGetDeveloperProductsIcons = ThumbnailsGetAssetsThumbnails;
export declare type ThumbnailsGetGamePassesIconsOptions = {
    gamePassIds: number[];
    size?: "150x150";
    format?: "png" | "jpg";
    isCircular?: boolean;
};
export declare type ThumbnailsGetGamePassesIcons = ThumbnailsGetAssetsThumbnails;
export declare type ThumbnailsGetUniverseThumbnailsOptions = {
    universeId: number;
    thumbnailIds: number[];
    size?: "768x432" | "576x324" | "480x270" | "384x216" | "256x144";
    format?: "png" | "jpg";
    isCircular?: boolean;
};
export declare type ThumbnailsGetUniverseThumbnails = ThumbnailsGetAssetsThumbnails;
export declare type ThumbnailsGetUniversesRootPlaceThumbnailsOptions = {
    universeIds: number[];
    returnPolicy?: "PlaceHolder" | "AutoGenerated" | "ForceAutoGenerated";
    size?: "50x50" | "128x128" | "150x150" | "256x256" | "512x512";
    format?: "png" | "jpg";
    isCircular?: boolean;
};
export declare type ThumbnailsGetUniversesRootPlaceThumbnails = ThumbnailsGetAssetsThumbnails;
export declare type ThumbnailsGetUniversesThumbnailsOptions = {
    universeIds: number[];
    countPerUniverse?: number;
    defaults?: boolean;
    size?: "768x432" | "576x324" | "480x270" | "384x216" | "256x144";
    format?: "png" | "jpg";
    isCircular?: boolean;
};
export declare type ThumbnailsGetUniversesThumbnails = {
    data: {
        universeId: number;
        error?: {
            code: number;
            message: string;
            userFacingMessage: string;
            field: string;
            fieldData: unknown;
        };
        thumbnails: {
            targetId: number;
            state: "Error" | string;
            imageUrl: string;
        }[];
    }[];
};
export declare type ThumbnailsGetGroupsIconsOptions = {
    groupIds: number[];
    size?: "150x150" | "420x420";
    format?: "png" | "jpg";
    isCircular?: boolean;
};
export declare type ThumbnailsGetGroupsIcons = ThumbnailsGetAssetsThumbnails;
export declare type ThumbnailsGetUsersFullBodyAvatarImagesOptions = {
    userIds: number[];
    size?: "30x30" | "48x48" | "60x60" | "75x75" | "100x100" | "140x140" | "150x150" | "150x200" | "180x180" | "250x250" | "352x352" | "420x420" | "720x720";
    format?: "png" | "jpg";
    isCircular?: boolean;
};
export declare type ThumbnailsGetUsersFullBodyAvatarImages = ThumbnailsGetAssetsThumbnails;
export declare type ThumbnailsGetUsersAvatarBustImagesOptions = {
    userIds: number[];
    size?: "50x50" | "60x60" | "75x75";
    format?: "png" | "jpg";
    isCircular?: boolean;
};
export declare type ThumbnailsGetUsersAvatarBustImages = ThumbnailsGetAssetsThumbnails;
export declare type ThumbnailsGetUsersAvatarHeadShotsImagesOptions = {
    userIds: number[];
    size?: "48x48" | "50x50" | "60x60" | "75x75" | "110x110" | "150x150" | "180x180" | "352x352" | "420x420" | "720x720";
    format?: "png" | "jpg";
    isCircular?: boolean;
};
export declare type ThumbnailsGetUsersAvatarHeadShotsImages = ThumbnailsGetAssetsThumbnails;
export declare type ThumbnailsGetUsersOutfitsImagesOptions = {
    userOutfitIds: number[];
    size?: "150x150" | "420x420";
    format?: "png" | "jpg";
    isCircular?: boolean;
};
export declare type ThumbnailsGetUsersOutfitsImages = ThumbnailsGetAssetsThumbnails;
export declare type ThumbnailsGetBatchImagesOptions = {
    requestId: string;
    targetId: number;
    type: "Avatar" | "AvatarHeadShot" | "GameIcon" | "BadgeIcon" | "GameThumbnail" | "GamePass" | "Asset" | "BundleThumbnail" | "Outfit" | "GroupIcon" | "DeveloperProduct" | "AutoGeneratedAsset";
    size: string;
    isCircular: boolean;
};
export declare type ThumbnailsGetBatchImages = {
    data: {
        requestId: string;
        errorCode?: number;
        errorMessage?: string;
        targetId: number;
        state: "Error" | string;
        imageUrl: string;
    }[];
};
export declare class ThumbnailsAPI extends BaseAPI {
    constructor(client: Client);
    getAssetsThumbnails(options: ThumbnailsGetAssetsThumbnailsOptions): Promise<ThumbnailsGetAssetsThumbnails>;
    getBadgesIcons(options: ThumbnailsGetBadgesIconsOptions): Promise<ThumbnailsGetBadgesIcons>;
    getBundlesThumbnails(options: ThumbnailsGetBundlesThumbnailsOptions): Promise<ThumbnailsGetBundlesThumbnails>;
    getDeveloperProductIcons(options: ThumbnailsGetDeveloperProductsIconsOptions): Promise<ThumbnailsGetDeveloperProductsIcons>;
    getGamePassesIcons(options: ThumbnailsGetGamePassesIconsOptions): Promise<ThumbnailsGetGamePassesIcons>;
    getUniverseThumbnailIds(options: ThumbnailsGetUniverseThumbnailsOptions): Promise<ThumbnailsGetUniverseThumbnails>;
    getUniversesRootPlaceThumbnail(options: ThumbnailsGetUniversesRootPlaceThumbnailsOptions): Promise<ThumbnailsGetUniversesRootPlaceThumbnails>;
    getUniversesThumbnailIds(options: ThumbnailsGetUniversesThumbnailsOptions): Promise<ThumbnailsGetUniversesThumbnails>;
    getGroupsIcons(options: ThumbnailsGetGroupsIconsOptions): Promise<ThumbnailsGetGroupsIcons>;
    getUsersFullBodyAvatarImages(options: ThumbnailsGetUsersFullBodyAvatarImagesOptions): Promise<ThumbnailsGetUsersFullBodyAvatarImages>;
    getUsersAvatarBustImages(options: ThumbnailsGetUsersAvatarBustImagesOptions): Promise<ThumbnailsGetUsersAvatarBustImages>;
    getUsersAvatarHeadShotImages(options: ThumbnailsGetUsersAvatarHeadShotsImagesOptions): Promise<ThumbnailsGetUsersAvatarHeadShotsImages>;
    getUsersOutfitsImages(options: ThumbnailsGetUsersOutfitsImagesOptions): Promise<ThumbnailsGetUsersOutfitsImages>;
    getBatchImages(options: ThumbnailsGetBatchImagesOptions): Promise<ThumbnailsGetBatchImages>;
}
